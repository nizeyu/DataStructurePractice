/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution
{
    public ListNode reverseBetween(ListNode head, int m, int n)
    {
        if(head == null || head.next == null || m > n)
            return head;
        
        ListNode dummyNode = new ListNode(0);
        dummyNode.next = head;
        ListNode d = dummyNode;
        
        for(int i = 0; i < m - 1; i++)
            d = d.next;
        
        ListNode p = d.next;
        ListNode q = p.next;
        
        for(int i = 0; i < n - m; i++)
        {
            ListNode t = q.next;
            q.next = p;
            p = q;
            
            q = t;
        }
        
        ListNode t = d.next;
        d.next = p;
        t.next = q;
        
        return dummyNode.next;
    }
}
